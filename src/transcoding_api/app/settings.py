"""
Django settings for api project.

Generated by 'django-admin startproject' using Django 4.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

import os.path
from pathlib import Path

from configurations import Configuration, values

BASE_DIR = Path(__file__).resolve().parent.parent


class Base(Configuration):
    # Build paths inside the project like this: BASE_DIR / 'subdir'.
    DOTENV = os.path.join(BASE_DIR, ".env")

    # Quick-start development settings - unsuitable for production
    # See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

    # SECURITY WARNING: keep the secret key used in production secret!
    SECRET_KEY = "django-insecure-$5nen+8sl3+h^#i&p1mu$k1t$as6*4m%ggisk&=%8$l&5+k-i6"

    # SECURITY WARNING: don't run with debug turned on in production!
    DEBUG = True

    ALLOWED_HOSTS = []

    # Application definition

    INSTALLED_APPS = [
        "transcode_api.apps.TranscodeAPIConfig",
        "django.contrib.admin",
        "django.contrib.auth",
        "django.contrib.contenttypes",
        "django.contrib.sessions",
        "django.contrib.messages",
        "django.contrib.staticfiles",
        "storages",
        "rest_framework",
    ]

    MIDDLEWARE = [
        "django.middleware.security.SecurityMiddleware",
        "django.contrib.sessions.middleware.SessionMiddleware",
        "django.middleware.common.CommonMiddleware",
        "django.middleware.csrf.CsrfViewMiddleware",
        "django.contrib.auth.middleware.AuthenticationMiddleware",
        "django.contrib.messages.middleware.MessageMiddleware",
        "django.middleware.clickjacking.XFrameOptionsMiddleware",
    ]

    ROOT_URLCONF = "app.urls"

    TEMPLATES = [
        {
            "BACKEND": "django.template.backends.django.DjangoTemplates",
            "DIRS": [],
            "APP_DIRS": True,
            "OPTIONS": {
                "context_processors": [
                    "django.template.context_processors.debug",
                    "django.template.context_processors.request",
                    "django.contrib.auth.context_processors.auth",
                    "django.contrib.messages.context_processors.messages",
                ],
            },
        },
    ]

    ASGI_APPLICATION = "app.asgi.application"

    # AWS

    AWS_S3_REGION_NAME = values.Value("eu-west-1")
    AWS_S3_URL_PROTOCOL = values.Value("https")
    AWS_BASE_NAME = values.Value()

    # Database
    # https://docs.djangoproject.com/en/4.2/ref/settings/#databases

    DATABASES = {
        "default": {
            "ENGINE": "django.db.backends.sqlite3",
            "NAME": BASE_DIR / "db.sqlite3",
        }
    }

    STORAGE_VIDEO_LOCATION = values.Value(str(BASE_DIR / "storage/videos/"))

    STORAGES = {
        "default": {
            "BACKEND": "django.core.files.storage.FileSystemStorage",
            "OPTIONS": {
                "location": BASE_DIR / "storage/",
            },
        },
        "videos": {
            "BACKEND": "storages.backends.s3boto3.S3Boto3Storage",
            "OPTIONS": {
                "location": STORAGE_VIDEO_LOCATION,
            },
        },
        "staticfiles": {
            "BACKEND": "django.contrib.staticfiles.storage.StaticFilesStorage",
        },
    }

    # Transcoding Configurations

    TRANSCODING_ALWAYS_TRANSCODE_ORIGINAL_RESOLUTION = values.BooleanValue(False)
    TRANSCODING_RESOLUTIONS_144P = values.BooleanValue(False)
    TRANSCODING_RESOLUTIONS_240P = values.BooleanValue(False)
    TRANSCODING_RESOLUTIONS_360P = values.BooleanValue(True)
    TRANSCODING_RESOLUTIONS_480P = values.BooleanValue(True)
    TRANSCODING_RESOLUTIONS_720P = values.BooleanValue(True)
    TRANSCODING_RESOLUTIONS_1080P = values.BooleanValue(False)
    TRANSCODING_RESOLUTIONS_1440P = values.BooleanValue(False)
    TRANSCODING_RESOLUTIONS_2160P = values.BooleanValue(False)

    TRANSCODING_FPS_MIN = values.IntegerValue(1)
    TRANSCODING_FPS_STANDARD = values.ListValue([24, 25, 30])
    TRANSCODING_FPS_HD_STANDARD = values.ListValue([50, 60])
    TRANSCODING_FPS_AUDIO_MERGE = values.IntegerValue(25)
    TRANSCODING_FPS_AVERAGE = values.IntegerValue(30)
    TRANSCODING_FPS_MAX = values.IntegerValue(60)
    TRANSCODING_FPS_KEEP_ORIGIN_FPS_RESOLUTION_MIN = values.IntegerValue(720)

    # Password validation
    # https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

    AUTH_PASSWORD_VALIDATORS = [
        {
            "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
        },
        {
            "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
        },
        {
            "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
        },
        {
            "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
        },
    ]

    # Internationalization
    # https://docs.djangoproject.com/en/4.2/topics/i18n/

    LANGUAGE_CODE = "en-us"

    TIME_ZONE = "UTC"

    USE_I18N = True

    USE_TZ = True

    # Static files (CSS, JavaScript, Images)
    # https://docs.djangoproject.com/en/4.2/howto/static-files/

    STATIC_URL = "static/"

    # Default primary key field type
    # https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

    DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"


class Development(Base):
    DEBUG = values.BooleanValue(True)
    STORAGE_VIDEO_LOCATION = values.Value(
        str(BASE_DIR / "storage/videos/"),
        environ_name="STORAGE_VIDEO_LOCATION",
    )

    STORAGES = {
        "default": {
            "BACKEND": "django.core.files.storage.FileSystemStorage",
            "OPTIONS": {
                "location": BASE_DIR / "storage/",
            },
        },
        "videos": {
            "BACKEND": "django.core.files.storage.FileSystemStorage",
            "OPTIONS": {
                "location": STORAGE_VIDEO_LOCATION,
            },
        },
        "staticfiles": {
            "BACKEND": "django.contrib.staticfiles.storage.StaticFilesStorage",
        },
    }
