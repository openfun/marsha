# Application default configuration

# -- ingress
marsha_host: "marsha.{{ namespace_name }}.{{ domain_name }}"
marsha_ingress_class_name: "{{ default_ingress_class_name }}"

# -- nginx
marsha_nginx_image_name: "nginxinc/nginx-unprivileged"
marsha_nginx_image_tag: "1.20"
marsha_nginx_port: 8061
marsha_nginx_replicas: 1
marsha_nginx_htpasswd_secret_name: "marsha-htpasswd"
marsha_nginx_healthcheck_port: 5000
marsha_nginx_healthcheck_endpoint: "/__healthcheck__"
marsha_nginx_status_endpoint: "/__status__"
marsha_nginx_admin_ip_whitelist: []
marsha_nginx_bypass_htaccess_ip_whitelist: []
marsha_nginx_static_cache_expires: "1M"

# -- postgresql
marsha_postgresql_version: "12"
marsha_postgresql_image_name: "postgres"
marsha_postgresql_image_tag: "12"
marsha_postgresql_host: "postgresql"
marsha_postgresql_port: 5432
marsha_postgresql_database: "marsha"
marsha_postgresql_pgdata: "/var/lib/postgresql/data"
marsha_postgresql_secret_name: "marsha-postgresql-{{ marsha_vault_checksum | default('undefined_marsha_vault_checksum') }}"

# -- marsha
marsha_image_name: "fundocker/marsha"
marsha_image_tag: "3.23.0"
marsha_django_port: 8000
marsha_app_replicas: 1
marsha_xapi_replicas: 1
marsha_django_configuration: "Development"
marsha_secret_name: "marsha-{{ marsha_vault_checksum | default('undefined_marsha_vault_checksum') }}"
marsha_cloudfront_private_key_secret_name: "marsha-sshkey-{{ marsha_vault_checksum | default('undefined_marsha_vault_checksum') }}"
marsha_cloudfront_private_key_path: "/private/.ssh/aws/ssh-privatekey"
# Set this to true if you have configured AWS CloudFront to require requests
# signature with the aforementioned SSH key
marsha_should_sign_requests: true
marsha_activate_http_basic_auth: false
marsha_deploy_clean_medialive_dev_stack_cronjob: false
marsha_check_harvested_cronjob_schedule: "0 3 * * *"
marsha_check_live_state_cronjob_schedule: "*/20 * * * *"
marsha_check_idle_state_cronjob_schedule: "0 4 * * *"
marsha_clean_mediapackages_cronjob_schedule: "0 5 * * *"
marsha_clean_medialive_dev_stack_cronjob_schedule: "*/5 * * * *"
marsha_clean_aws_elemental_stack_cronjob_schedule: "0 */2 * * *"
marsha_prefetch_saml_fer_metadata_cronjob_schedule: "0 */6 * * *"

# -- volumes
marsha_media_volume_size: 2Gi
marsha_static_volume_size: 2Gi

marsha_app_resources:
  requests:
    cpu: 50m
    memory: 500Mi
  limits:
    cpu: 1
    memory: 2.5Gi

# -- resources
{% set job_resources = {
  "requests": {
    "cpu": "50m",
    "memory": "500Mi"
  }
} %}

marsha_app_job_db_migrate_resources: "{{ job_resources }}"
marsha_app_cronjob_check_harvested_resources: "{{ job_resources }}"
marsha_app_cronjob_check_live_idle_resources: "{{ job_resources }}"
marsha_app_cronjob_check_live_state_resources: "{{ job_resources }}"
marsha_app_cronjob_clean_mediapackages_resources: "{{ job_resources }}"
marsha_app_cronjob_clean_aws_elemental_stack_resources: "{{ job_resources }}"
marsha_app_cronjob_prefetch_saml_fer_metadata_resources: "{{ job_resources }}"

marsha_nginx_resources:
  requests:
    cpu: 10m
    memory: 5Mi

marsha_postgresql_resources:
  requests:
    cpu: 10m
    memory: 100Mi
