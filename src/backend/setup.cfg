[metadata]
name = marsha
description = A FUN video provider for Open edX
version = 3.1.3
author = Open FUN (France Universite Numerique)
author_email = fun.dev@fun-mooc.fr
license = MIT
classifiers =
    Development Status :: 5 - Production/Stable
    Intended Audience :: Education
    Intended Audience :: Developers
    License :: OSI Approved :: MIT License
    Framework :: Django
    Framework :: Django :: 2.0
    Programming Language :: Python
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3 :: Only
keywords =
    video
    open-edx
    accessibility
    a11y
url = https://github.com/openfun/marsha
requires-python = >=3.6

[options]
install_requires =
    boto3==1.9.248
    chardet==3.0.4 # puyup: >=3.0.2,<3.1.0
    coreapi==2.3.3
    cryptography==2.7
    django==2.2.6
    dj-database-url==0.5.0
    django-configurations==2.1
    django-extensions==2.2.3
    djangorestframework==3.10.3
    djangorestframework_simplejwt==4.3.0
    django-safedelete==0.5.2
    # superior versions of django-storages are not compatible with ManifestStaticFilesStorage
    django-storages==1.7.2
    dockerflow==2019.9.0
    gunicorn==19.9.0
    # Warning from psycopg2 "The psycopg2 wheel package will be renamed from release 2.8" => psyopg2-binary
    psycopg2-binary==2.7.5 # pyup: <=2.7.5
    PyLTI==0.7.0
    sentry-sdk==0.12.3
    requests==2.22.0
    urllib3==1.24.3 # pyup: >=1.21.1,<1.25
packages = find:
package_dir =
    =.
zip_safe = True

[options.packages.find]
exclude =
    tests

[options.entry_points]
console_scripts =
    # the ones provided with django are made unusable by django-configurations
    django-admin = configurations.management:execute_from_command_line
    django-admin.py = configurations.management:execute_from_command_line

[options.extras_require]
dev =
    black==19.3b0
    factory_boy==2.12.0
    flake8==3.7.8
    flake8-bugbear==19.8.0
    flake8-comprehensions==2.2.0
    flake8-formatter-abspath==1.0.1
    flake8-imports==0.1.1
    flake8-docstrings==1.5.0
    flake8-pep3101==1.2.1
    flake8-per-file-ignores==0.8.1
    ipython==7.8.0
    isort==4.3.21
    oauthlib==3.1.0
    pycodestyle==2.5.0
    pylint==2.4.2
    pylint-django==2.0.11
    pylint-plugin-utils===0.6
    pytest==5.2.1
    pytest-cov==2.8.1
    pytest-django==3.5.1
    pytest-mock==1.11.1
    wheel==0.33.6

[bdist_wheel]
universal = 1

[flake8]
max-line-length = 99
exclude =
    .git
    .venv
    build
    dist
    docs
    manage.py
    venv
    __pycache__
    *.egg-info
    */migrations/*
    stubs.py

[pycodestyle]
max-line-length = 99

[tool:pytest]
addopts = -v --cov-report term-missing
python_files =
    test_*.py
    tests.py
testpaths =
    marsha

[coverage:run]
branch = True

[isort]
combine_as_imports=1
default_section=THIRDPARTY
force_sort_within_sections=1
from_first=1
include_trailing_comma=1
indent='    '
known_django=django
known_first_party=marsha
line_length=88
lines_after_imports=2
multi_line_output=3
not_skip = __init__.py
sections=FUTURE,STDLIB,DJANGO,THIRDPARTY,FIRSTPARTY,LOCALFOLDER
use_parentheses=1
