[metadata]
name = marsha
description = A FUN video provider for Open edX
version = 4.0.0-beta.4
author = Open FUN (France Universite Numerique)
author_email = fun.dev@fun-mooc.fr
license = MIT
classifiers =
    Development Status :: 5 - Production/Stable
    Intended Audience :: Education
    Intended Audience :: Developers
    License :: OSI Approved :: MIT License
    Framework :: Django
    Framework :: Django :: 4.0
    Programming Language :: Python
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3 :: Only
keywords =
    video
    open-edx
    accessibility
    a11y
url = https://github.com/openfun/marsha
requires-python = >=3.9

[options]
install_requires =
    Brotli==1.0.9
    boto3==1.24.3
    channels==3.0.4
    channels-redis==3.4.0
    chardet==4.0.0
    coreapi==2.3.3
    cryptography==37.0.2
    django==4.0.5
    dj-database-url==0.5.0
    django-configurations==2.3.2
    django-cors-headers==3.13.0
    django-extensions==3.1.5
    djangorestframework==3.13.1
    djangorestframework_simplejwt==5.2.0
    django-redis==5.2.0
    django-safedelete==1.2.2
    django-storages==1.12.3
    django-waffle==2.5.0
    dockerflow==2022.1.0
    gunicorn==20.1.0
    logging-ldp==0.0.6
    oauthlib==3.2.0
    django-parler==2.3
    psycopg2-binary==2.9.3
    PyLTI==0.7.0
    python-dateutil==2.8.2
    sentry-sdk==1.5.12
    requests==2.27.1
    urllib3==1.26.9
    uvicorn[standard]==0.17.6
    whitenoise==6.2.0
    xmpppy==0.7.1

    # App BBB
    xmltodict==0.13.0
packages = find:
package_dir =
    =.
zip_safe = True

[options.packages.find]
exclude =
    tests

[options.entry_points]
console_scripts =
    # the ones provided with django are made unusable by django-configurations
    django-admin = configurations.management:execute_from_command_line
    django-admin.py = configurations.management:execute_from_command_line

[options.extras_require]
dev =
    bandit==1.7.4
    black==22.3.0
    factory_boy==3.2.1
    flake8==4.0.1
    ipython==8.4.0
    isort==5.10.1
    pdbpp==0.10.3
    pycodestyle==2.8.0
    pylint==2.14.1
    pylint-django==2.5.3
    pylint-plugin-utils==0.7
    pytest==7.1.2
    pytest-cov==3.0.0
    pytest-django==4.5.2
    pytest-mock==3.7.0
    responses==0.21.0
    wheel==0.37.1

e2e =
    playwright==1.22.0
    pytest-playwright==0.3.0

[bdist_wheel]
universal = 1

[flake8]
max-line-length = 99
exclude =
    .git
    .venv
    build
    dist
    docs
    manage.py
    venv
    __pycache__
    *.egg-info
    */migrations/*
    stubs.py

[pycodestyle]
max-line-length = 99

[tool:pytest]
addopts = -v --cov-report term-missing
python_files =
    test_*.py
    tests.py
testpaths =
    marsha

[coverage:run]
branch = True

[isort]
combine_as_imports=1
default_section=THIRDPARTY
force_sort_within_sections=1
from_first=1
include_trailing_comma=1
indent='    '
known_django=django
known_first_party=marsha
line_length=88
lines_after_imports=2
multi_line_output=3
sections=FUTURE,STDLIB,DJANGO,THIRDPARTY,FIRSTPARTY,LOCALFOLDER
use_parentheses=1
