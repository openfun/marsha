# Generated by Django 2.2.1 on 2019-05-23 10:04

import uuid

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [("core", "0013_auto_20190513_0441")]

    operations = [
        migrations.AlterField(
            model_name="video",
            name="created_by",
            field=models.ForeignKey(
                blank=True,
                help_text="author of the file",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="created_video",
                to=settings.AUTH_USER_MODEL,
                verbose_name="author",
            ),
        ),
        migrations.AlterField(
            model_name="video",
            name="duplicated_from",
            field=models.ForeignKey(
                blank=True,
                help_text="original file this one was duplicated from",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="duplicates",
                to="core.Video",
                verbose_name="duplicated from",
            ),
        ),
        migrations.AlterField(
            model_name="video",
            name="playlist",
            field=models.ForeignKey(
                help_text="playlist to which this file belongs",
                on_delete=django.db.models.deletion.PROTECT,
                related_name="videos",
                to="core.Playlist",
                verbose_name="playlist",
            ),
        ),
        migrations.AlterField(
            model_name="video",
            name="title",
            field=models.CharField(
                help_text="title of the file", max_length=255, verbose_name="title"
            ),
        ),
        migrations.AlterField(
            model_name="video",
            name="upload_state",
            field=models.CharField(
                choices=[
                    ("pending", "pending"),
                    ("processing", "processing"),
                    ("error", "error"),
                    ("ready", "ready"),
                ],
                default="pending",
                help_text="state of the upload in AWS.",
                max_length=20,
                verbose_name="upload state",
            ),
        ),
        migrations.AlterField(
            model_name="video",
            name="uploaded_on",
            field=models.DateTimeField(
                blank=True,
                help_text="datetime at which the active version of the file was uploaded.",
                null=True,
                verbose_name="uploaded on",
            ),
        ),
        migrations.AlterField(
            model_name="video",
            name="description",
            field=models.TextField(
                blank=True,
                help_text="description of the file",
                null=True,
                verbose_name="description",
            ),
        ),
        migrations.AlterField(
            model_name="video",
            name="position",
            field=models.PositiveIntegerField(
                default=0,
                help_text="position of this file in the playlist",
                verbose_name="position",
            ),
        ),
        migrations.CreateModel(
            name="File",
            fields=[
                ("deleted", models.DateTimeField(editable=False, null=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="primary key for the record as UUID",
                        primary_key=True,
                        serialize=False,
                        verbose_name="id",
                    ),
                ),
                (
                    "created_on",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="date and time at which a record was created",
                        verbose_name="created on",
                    ),
                ),
                (
                    "updated_on",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="date and time at which a record was last updated",
                        verbose_name="updated on",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="title of the file",
                        max_length=255,
                        verbose_name="title",
                    ),
                ),
                (
                    "lti_id",
                    models.CharField(
                        help_text="ID for synchronization with an external LTI tool",
                        max_length=255,
                        verbose_name="lti id",
                    ),
                ),
                (
                    "uploaded_on",
                    models.DateTimeField(
                        blank=True,
                        help_text="datetime at which the active version of the file was uploaded.",
                        null=True,
                        verbose_name="uploaded on",
                    ),
                ),
                (
                    "upload_state",
                    models.CharField(
                        choices=[
                            ("pending", "pending"),
                            ("processing", "processing"),
                            ("error", "error"),
                            ("ready", "ready"),
                        ],
                        default="pending",
                        help_text="state of the upload in AWS.",
                        max_length=20,
                        verbose_name="upload state",
                    ),
                ),
                ("show_download", models.BooleanField(default=True)),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="description of the file",
                        null=True,
                        verbose_name="description",
                    ),
                ),
                (
                    "position",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="position of this file in the playlist",
                        verbose_name="position",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="author of the file",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_file",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="author",
                    ),
                ),
                (
                    "duplicated_from",
                    models.ForeignKey(
                        blank=True,
                        help_text="original file this one was duplicated from",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="duplicates",
                        to="core.File",
                        verbose_name="duplicated from",
                    ),
                ),
                (
                    "playlist",
                    models.ForeignKey(
                        help_text="playlist to which this file belongs",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="files",
                        to="core.Playlist",
                        verbose_name="playlist",
                    ),
                ),
            ],
            options={
                "verbose_name": "file",
                "verbose_name_plural": "files",
                "db_table": "file",
            },
        ),
        migrations.AddConstraint(
            model_name="file",
            constraint=models.UniqueConstraint(
                condition=models.Q(deleted=None),
                fields=("lti_id", "playlist"),
                name="file_unique_idx",
            ),
        ),
    ]
