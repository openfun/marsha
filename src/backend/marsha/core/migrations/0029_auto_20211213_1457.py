# Generated by Django 3.2.9 on 2021-12-13 14:57

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


def migrate_lti_id(apps, schema_editor):
    """lti_id is set with the lti_id of the video's playlist."""
    Liveregistrations = apps.get_model("core", "Liveregistration")
    registrations_to_migrate = Liveregistrations.objects.filter(
        lti_id__isnull=True, consumer_site__isnull=False
    )
    for liveregistration in registrations_to_migrate:
        liveregistration.lti_id = liveregistration.video.playlist.lti_id
        liveregistration.save()


class Migration(migrations.Migration):

    dependencies = [
        ("core", "0028_auto_20211129_1843"),
    ]

    operations = [
        migrations.RemoveConstraint(
            model_name="liveregistration",
            name="liveregistration_unique_video_lti_idx",
        ),
        migrations.RemoveConstraint(
            model_name="liveregistration",
            name="liveregistration_unique_email_consumer_site_video_idx",
        ),
        migrations.AlterField(
            model_name="liveregistration",
            name="email",
            field=models.EmailField(
                blank=True,
                db_index=True,
                max_length=254,
                null=True,
                verbose_name="email address",
            ),
        ),
        migrations.AddField(
            model_name="liveregistration",
            name="lti_id",
            field=models.CharField(
                blank=True,
                help_text="ID for synchronization with an external LTI tool",
                max_length=255,
                null=True,
                verbose_name="lti id",
            ),
        ),
        migrations.AlterField(
            model_name="liveregistration",
            name="lti_user_id",
            field=models.CharField(
                blank=True,
                db_index=True,
                help_text="Unique identifier for the user on the tool consumer, only present for lti users.",
                max_length=150,
                null=True,
                verbose_name="LTI user identifier",
            ),
        ),
        migrations.AddConstraint(
            model_name="liveregistration",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(
                        ("consumer_site__isnull", False),
                        ("lti_id__isnull", False),
                        ("lti_user_id__isnull", False),
                    ),
                    models.Q(
                        ("consumer_site__isnull", True),
                        ("email__isnull", False),
                        ("lti_id__isnull", True),
                        ("lti_user_id__isnull", True),
                    ),
                    _connector="OR",
                ),
                name="liveregistration_lti_or_public",
            ),
        ),
        migrations.AddConstraint(
            model_name="liveregistration",
            constraint=models.UniqueConstraint(
                condition=models.Q(("deleted", None)),
                fields=("lti_user_id", "lti_id", "consumer_site", "video"),
                name="liveregistration_unique_video_lti_idx",
            ),
        ),
        migrations.RunPython(migrate_lti_id),
    ]
