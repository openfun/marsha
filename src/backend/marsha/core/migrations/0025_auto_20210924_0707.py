# Generated by Django 3.2.7 on 2021-09-24 07:07

import uuid

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):
    dependencies = [
        ("core", "0024_auto_20210907_1219"),
    ]

    operations = [
        migrations.CreateModel(
            name="LiveRegistration",
            fields=[
                ("deleted", models.DateTimeField(editable=False, null=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="primary key for the record as UUID",
                        primary_key=True,
                        serialize=False,
                        verbose_name="id",
                    ),
                ),
                (
                    "created_on",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        editable=False,
                        help_text="date and time at which a record was created",
                        verbose_name="created on",
                    ),
                ),
                (
                    "updated_on",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="date and time at which a record was last updated",
                        verbose_name="updated on",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        db_index=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "lti_user_id",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        help_text="Unique identifier for the user on the tool consumer only present for lti users",
                        max_length=150,
                        null=True,
                        verbose_name="LTI user identifier",
                    ),
                ),
                (
                    "should_send_reminders",
                    models.BooleanField(
                        default=False,
                        help_text="whether user reminders are enabled for this live",
                        verbose_name="should send reminders",
                    ),
                ),
                (
                    "consumer_site",
                    models.ForeignKey(
                        blank=True,
                        help_text="Only present for lti users.",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="liveregistrations",
                        to="core.consumersite",
                        verbose_name="LTI consumer site",
                    ),
                ),
                (
                    "video",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="liveregistrations",
                        to="core.video",
                        verbose_name="Video",
                    ),
                ),
            ],
            options={
                "verbose_name": "live registration",
                "db_table": "live_registration",
            },
        ),
        migrations.AddConstraint(
            model_name="liveregistration",
            constraint=models.UniqueConstraint(
                condition=models.Q(("deleted", None)),
                fields=("email", "consumer_site", "video"),
                name="liveregistration_unique_email_consumer_site_video_idx",
            ),
        ),
        migrations.AddConstraint(
            model_name="liveregistration",
            constraint=models.UniqueConstraint(
                condition=models.Q(("consumer_site", None), ("deleted", None)),
                fields=("email", "video"),
                name="liveregistration_unique_email_video_with_consumer_site_none",
            ),
        ),
        migrations.AddConstraint(
            model_name="liveregistration",
            constraint=models.UniqueConstraint(
                condition=models.Q(("deleted", None)),
                fields=("lti_user_id", "consumer_site", "video"),
                name="liveregistration_unique_video_lti_idx",
            ),
        ),
    ]
